// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// 角色表
model Role {
  id          Int    @id @default(autoincrement())
  name        String @unique
  description String?
  
  // 关联
  users User[]

  @@index([name], map: "idx_role_name")
  @@map("roles")
}

// 用户表
model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  password  String
  fullName  String?  @map("full_name")
  phone     String?  @unique
  isActive  Boolean  @default(true) @map("is_active")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")
  
  // 外键
  roleId    Int @map("role_id")
  
  // 关联
  role           Role             @relation(fields: [roleId], references: [id])
  viewingRecords ViewingRecord[]  // 添加线索记录关联
  createdApiKeys ApiKey[]         @relation("UserApiKeys")

  @@index([username], map: "idx_username")
  @@index([phone], map: "idx_phone")
  @@index([isActive, roleId], map: "idx_active_role")
  @@index([createdAt], map: "idx_user_created")
  @@map("users")
}

// API密钥表
model ApiKey {
  id            Int      @id @default(autoincrement())
  channelName   String   @map("channel_name")
  apiKey        String   @unique @map("api_key")
  apiSecretHash String   @map("api_secret_hash")
  isActive      Boolean  @default(true) @map("is_active")
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @updatedAt @map("updated_at")
  createdBy     Int      @map("created_by")
  
  // 关联
  creator User @relation("UserApiKeys", fields: [createdBy], references: [id])
  viewingRecords ViewingRecord[]  // 添加带看记录关联

  @@index([isActive], map: "idx_apikey_active")
  @@index([channelName], map: "idx_channel_name")
  @@index([createdBy], map: "idx_apikey_creator")
  @@map("api_keys")
}

// 房源表
model Property {
  id        Int      @id @default(autoincrement())
  name      String
  address   String?
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  
  // 关联
  viewingRecords ViewingRecord[]

  @@index([name], map: "idx_property_name")
  @@index([address], map: "idx_property_address")
  @@map("properties")
}

// 线索记录表 - 房源带看记录表
model ViewingRecord {
  id                     Int       @id @default(autoincrement())
  tenantName             String?   @map("tenant_name")
  sessionId              String?   @map("session_id")
  requirementsJson       String?   @map("requirements_json")
  originalQuery          String?   @map("original_query")
  aiSummary              String?   @map("ai_summary")
  primaryPhone           String?   @map("primary_phone")
  primaryWechat          String?   @map("primary_wechat")
  viewingDate            DateTime? @map("viewing_date")
  roomId                 Int?      @map("room_id")
  businessType           String?   @map("business_type")
  propertyName           String?   @map("property_name")
  roomAddress            String?   @map("room_address")
  preferredViewingTime   String?   @map("preferred_viewing_time")
  viewingStatus          String    @default("pending") @map("viewing_status")
  agentId                Int?      @map("agent_id")
  agentName              String?   @map("agent_name")
  agentPhone             String?   @map("agent_phone")
  source                 String    @default("manual")
  apiKeyId               Int?      @map("api_key_id")  // 添加API Key关联
  remarks                String?
  
  // 新增字段
  sourcePlatform         String?   @map("source_platform")      // 线索来源平台
  customerRoomType       String?   @map("customer_room_type")    // 客户需求房源
  sourcePropertyPrice    Float?    @map("source_property_price") // 客户来源房源价格
  followUpPlatform       String?   @map("follow_up_platform")    // 当前跟进平台
  customerStatus         String?   @map("customer_status")       // 客户状态
  
  // 新增字段 - 带看信息（客户状态为"已约带看"时填写）
  leadViewingStatus      String?   @map("lead_viewing_status")   // 带看状态（一次带看、二次带看等）
  viewingProperties      String?   @map("viewing_properties")    // 带看房源（JSON格式，支持多选）
  customerFeedback       String?   @map("customer_feedback")      // 客户反馈
  
  createdAt              DateTime  @default(now()) @map("created_at")
  updatedAt              DateTime  @updatedAt @map("updated_at")
  deletedAt              DateTime? @map("deleted_at")
  
  // 关联
  agent    User?     @relation(fields: [agentId], references: [id])
  property Property? @relation(fields: [roomId], references: [id])
  apiKey   ApiKey?   @relation(fields: [apiKeyId], references: [id])  // 添加API Key关联
  
  @@index([sessionId], map: "idx_session_id")
  @@index([tenantName], map: "idx_tenant_name")
  @@index([primaryPhone], map: "idx_primary_phone")
  @@index([viewingStatus], map: "idx_viewing_status")
  @@index([agentId], map: "idx_agent_id")
  @@index([source], map: "idx_source")
  @@index([createdAt], map: "idx_created_at")
  @@index([viewingDate], map: "idx_viewing_date")
  @@index([businessType], map: "idx_business_type")
  @@index([viewingStatus, agentId], map: "idx_status_agent")
  @@index([agentId, createdAt], map: "idx_agent_created")
  @@map("ai_agent_viewing_records")
} 